const e=window.Globals,t=e.react,n=e["@react-three/fiber"],a=e["@react-three/drei"];let{Sphere:r,MeshTransmissionMaterial:l}=a;function o(){return window.React.createElement(window.React.Fragment,null,window.React.createElement(r,null,window.React.createElement(l,{metalness:0,roughness:.1,transmission:1,thickness:2})))}const c=2;"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"155"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="155");let{create:i}=e.zustand;const s=i(()=>({baseURL:""}));let w=n.createPortal,d=a.useGLTF;function u(){let e=s(e=>e.baseURL),t=d(`${e}/geometry/sphere.glb`);t.scene=t.scene.clone(!0);let n=[];return t.scene.traverse(e=>{e.material&&n.push(w(window.React.createElement("meshPhysicalMaterial",{color:"#ffffff",transmission:1,roughness:0,metalness:0,thickness:2,side:c}),e))}),window.React.createElement(window.React.Fragment,null,n,window.React.createElement("primitive",{object:t.scene}))}let{useEffect:m,useState:R}=t,{useGLTF:E,OrbitControls:f,Environment:h}=a,{Canvas:p}=n;function g(){return window.React.createElement(window.React.Fragment,null,window.React.createElement("group",null,window.React.createElement("group",{position:[1,0,0]},window.React.createElement(o,null)),window.React.createElement("group",{position:[-1,0,0]},window.React.createElement(u,null))))}function _(){return window.React.createElement(window.React.Fragment,null,window.React.createElement("div",{className:"",style:{position:"absolute",top:"0px",right:"0px"}},"HTML Overlay Yo"))}function b({smartObject:e=null,htmlOverlay:t=null}){let n=s(e=>e.baseURL);return window.React.createElement(window.React.Fragment,null,window.React.createElement(p,null,e,window.React.createElement(f,null),window.React.createElement(h,{background:!0,files:`${n}/hdr/grass.hdr`})),t)}function y({children:e,baseURL:t,onAsyncPreload:n=(async()=>{}),onReady:a=(()=>{})}){let[r,l]=R(!1);return m(()=>{s.setState({baseURL:t}),E.preload(`${t}/geometry/sphere.glb`),n().then(()=>{a(),l(!0)})},[t]),r?e:null}export{_ as HTMLOverlay,b as Preview,g as SmartObject,y as SwanLake};
//# sourceMappingURL=main.modern.js.map
