const e=window.Globals;let t=e["@react-three/drei"].Sphere;function n(){return window.React.createElement(window.React.Fragment,null,window.React.createElement(t,null,window.React.createElement("meshStandardMaterial",{metalness:1,roughness:.3,emissive:"#000fff"})))}const a=2;"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"155"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="155");let{create:r}=e.zustand;const l=r(()=>({baseURL:""}));let c=e["@react-three/fiber"].createPortal,o=e["@react-three/drei"].useGLTF;function i(){let e=l(e=>e.baseURL),t=o(`${e}/geometry/sphere.glb`);t.scene=t.scene.clone(!0);let n=[];return t.scene.traverse(e=>{e.material&&n.push(c(window.React.createElement("meshPhysicalMaterial",{color:"#ffffff",transmission:1,roughness:0,metalness:0,thickness:2,side:a}),e))}),window.React.createElement(window.React.Fragment,null,n,window.React.createElement("primitive",{object:t.scene}))}let{useEffect:s,useState:w}=e.react,{useGLTF:d,OrbitControls:u,Environment:m}=e["@react-three/drei"],{Canvas:R}=e["@react-three/fiber"];function E(){return window.React.createElement(window.React.Fragment,null,window.React.createElement("group",null,window.React.createElement("group",{position:[1,0,0]},window.React.createElement(n,null)),window.React.createElement("group",{position:[-1,0,0]},window.React.createElement(i,null))))}function f(){return window.React.createElement(window.React.Fragment,null,window.React.createElement("div",{className:"",style:{position:"absolute",top:"0px",right:"0px"}},"HTML Overlay Yo"))}function h({smartObject:e=null,htmlOverlay:t=null}){let n=l(e=>e.baseURL);return window.React.createElement(window.React.Fragment,null,window.React.createElement(R,null,e,window.React.createElement(u,null),window.React.createElement(m,{background:!0,files:`${n}/hdr/grass.hdr`})),t)}function p({children:e,baseURL:t,onAsyncPreload:n=(async()=>{}),onReady:a=(()=>{})}){let[r,c]=w(!1);return s(()=>{l.setState({baseURL:t}),d.preload(`${t}/geometry/sphere.glb`),n().then(()=>{a(),c(!0)})},[t]),r?e:null}export{f as HTMLOverlay,h as Preview,E as SmartObject,p as SwanLake};
//# sourceMappingURL=main.modern.js.map
